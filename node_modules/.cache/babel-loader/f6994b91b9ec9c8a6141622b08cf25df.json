{"ast":null,"code":"var _jsxFileName = \"/Users/beetee/Downloads/todolist_frontend/src/components/Navigation/ModalPassword.js\";\nimport React from 'react';\nimport { Modal, Button, Row, Col, Form, Alert } from 'react-bootstrap';\n\nclass ModalPassword extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      const password = e.target.password.value;\n      e.preventDefault();\n      fetch('https://desolate-waters-84729.herokuapp.com/update/' + this.props.info.id, {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password: password\n        })\n      }).then(res => console.log(\"Password is updated\"));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 37\n      }\n    }, \"Update your Password\"), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"TodoName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 53\n      }\n    }, \"Update Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      minLength: \"5\",\n      maxLength: \"15\",\n      type: \"password\",\n      name: \"password\",\n      required: true,\n      placeholder: \"Enter New Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 53\n      }\n    }, \"Update\"))), /*#__PURE__*/React.createElement(Alert, {\n      show: this.props.alert,\n      className: \"text-center\",\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 49\n      }\n    }, \"Password is updated successfully\")))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 41\n      }\n    }, \"Close\")));\n  }\n\n}\n\nexport default ModalPassword;","map":{"version":3,"sources":["/Users/beetee/Downloads/todolist_frontend/src/components/Navigation/ModalPassword.js"],"names":["React","Modal","Button","Row","Col","Form","Alert","ModalPassword","Component","handleSubmit","e","password","target","value","preventDefault","fetch","props","info","id","method","headers","body","JSON","stringify","then","res","console","log","render","show","handleClose","alert"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Modal, Button, Row, Col, Form, Alert } from 'react-bootstrap'\n\nclass ModalPassword extends React.Component{\n    \n\n\n    handleSubmit = (e) => {\n        const password = e.target.password.value\n        e.preventDefault()\n        fetch('https://desolate-waters-84729.herokuapp.com/update/' + this.props.info.id, {\n        method:'put',\n        headers:{'Content-Type' : 'application/json'},\n        body:JSON.stringify({\n          password: password\n        })\n      })\n      .then(res => console.log(\"Password is updated\")) \n       \n    }\n    render(){\n        \n        return(\n            <Modal show={this.props.show} onHide={this.props.handleClose} >\n                                    <Modal.Header closeButton>Update your Password</Modal.Header>\n                                    <Modal.Body>\n                                        <Row>\n                                            <Col sm={6}>\n                                                <Form onSubmit={this.handleSubmit}>\n                                                <Form.Group controlId=\"TodoName\" >\n                                                    <Form.Label>Update Password</Form.Label>\n                                                    <Form.Control minLength=\"5\" maxLength=\"15\" type=\"password\" name=\"password\" required placeholder=\"Enter New Password\" />\n                                                </Form.Group>\n                                                <Form.Group>\n                                                    <Button variant=\"primary\" type=\"submit\">Update</Button>\n                                                </Form.Group>\n                                                </Form>\n                                                <Alert  show={this.props.alert} className=\"text-center\" variant=\"success\">\n                                                    Password is updated successfully\n                                                </Alert>\n                                                \n                                            </Col>\n                                        </Row>\n                                    </Modal.Body>\n                                    <Modal.Footer>\n                                        <Button onClick = { this.props.handleClose }>Close</Button>\n                                    </Modal.Footer>\n            </Modal>\n        )\n    }\n}\n\nexport default ModalPassword"]},"metadata":{},"sourceType":"module"}