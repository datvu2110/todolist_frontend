{"ast":null,"code":"var _jsxFileName = \"/Users/beetee/Downloads/Bloc/todolist/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Signin from './components/Signin/Signin';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Register from './components/Register/Register';\nimport Note from './components/Notes/Note';\nconst particlesOption = {\n  particles: {\n    polygon: {\n      enable: true,\n      type: 'inside',\n      move: {\n        radius: 10\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      route: 'signin',\n      isSignedIn: false,\n      alert: false,\n      user: {\n        id: '',\n        name: '',\n        email: ''\n      },\n      currentItem: {\n        text: '',\n        key: ''\n      },\n      items: []\n    };\n\n    this.onShowAlert = () => {\n      this.setState({\n        alert: true\n      });\n    };\n\n    this.onCloseAlert = () => {\n      this.setState({\n        alert: false\n      });\n    };\n\n    this.loadUser = data => {\n      var obj;\n      fetch(' http://localhost:8000/todo/' + data.id).then(res => res.json()).then(data => obj = data).then(() => this.setState({\n        items: obj\n      }));\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email\n        }\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.addItem = (item, id) => {\n      if (item.todo !== \"\") {\n        fetch('http://localhost:8000/add/' + id, {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            todo: item.todo,\n            id: id\n          })\n        }).then(res => res.json().then(resp => {\n          item.noteid = resp.noteid;\n          const newItems = [...this.state.items, item];\n          this.setState({\n            items: newItems\n          });\n        }));\n      }\n    };\n\n    this.editItem = (todo, id) => {\n      fetch('http://localhost:8000/todo/' + id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'sdfsfsfwiiowuerewrwrewrww'\n        },\n        body: JSON.stringify({\n          todo: todo\n        })\n      }).then(res => {\n        console.log(id);\n        const editedItems = this.state.items;\n\n        for (let i = 0; i < editedItems.length; i++) {\n          if (editedItems[i].noteid == id) {\n            editedItems[i].todo = todo;\n          }\n        }\n\n        this.setState({\n          items: editedItems\n        });\n      });\n    };\n\n    this.deleteItem = key => {\n      fetch('http://localhost:8000/todo/' + key, {\n        method: 'delete',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          noteid: key\n        })\n      }).then(data => {\n        const filteredItems = this.state.items.filter(item => item.noteid !== key);\n        this.setState({\n          items: filteredItems\n        });\n      });\n    };\n\n    this.toggleComplete = item => {\n      console.log(item);\n\n      if (item.done != 0) {\n        fetch('http://localhost:8000/toggle/' + item.noteid, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'sdfsfsfwiiowuerewrwrewrww'\n          },\n          body: JSON.stringify({\n            done: 0\n          })\n        }).then(res => {\n          const editedItems = this.state.items;\n\n          for (let i = 0; i < editedItems.length; i++) {\n            if (editedItems[i].noteid === item.noteid) {\n              editedItems[i].done = 0;\n            }\n          }\n\n          this.setState({\n            items: editedItems\n          });\n        });\n      } else {\n        fetch('http://localhost:8000/toggle/' + item.noteid, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'sdfsfsfwiiowuerewrwrewrww'\n          },\n          body: JSON.stringify({\n            done: 1\n          })\n        }).then(res => {\n          const editedItems = this.state.items;\n\n          for (let i = 0; i < editedItems.length; i++) {\n            if (editedItems[i].noteid === item.noteid) {\n              editedItems[i].done = 1;\n            }\n          }\n\n          this.setState({\n            items: editedItems\n          });\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navigation, {\n      isSignedIn: this.state.isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Particles, {\n      params: particlesOption,\n      className: \"particles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Note, {\n      show: this.state.show,\n      toggleComplete: this.toggleComplete,\n      editItem: this.editItem,\n      deleteItem: this.deleteItem,\n      addItem: this.addItem,\n      items: this.state.items,\n      info: this.state.user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    })) : this.state.route === 'signin' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      params: particlesOption,\n      className: \"particles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Signin, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      params: particlesOption,\n      className: \"particles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/src/App.js"],"names":["React","Component","Particles","Signin","Navigation","Logo","Register","Note","particlesOption","particles","polygon","enable","type","move","radius","App","state","route","isSignedIn","alert","user","id","name","email","currentItem","text","key","items","onShowAlert","setState","onCloseAlert","loadUser","data","obj","fetch","then","res","json","onRouteChange","addItem","item","todo","method","headers","body","JSON","stringify","resp","noteid","newItems","editItem","console","log","editedItems","i","length","deleteItem","filteredItems","filter","toggleComplete","done","render","show"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport './App.css';\nimport Signin from './components/Signin/Signin';\nimport Navigation from './components/Navigation/Navigation'\nimport Logo from './components/Logo/Logo'\nimport Register from './components/Register/Register'\nimport Note from './components/Notes/Note'\n\nconst particlesOption={\n  particles:{\n    polygon: {\n      enable: true,\n      type: 'inside',\n      move: {\n          radius: 10\n      }\n    }\n  }\n}\n\n\n\n\nclass App extends Component {\n\n  state = {\n    route:'signin',\n    isSignedIn: false,\n    alert: false,\n    user:{\n      id:'',\n      name:'',\n      email:''\n    }, \n    currentItem:{\n      text:'',\n      key:''\n    },\n    items:[]\n\n  }\n\n  onShowAlert = () => {\n    this.setState({alert:true})\n  }\n  onCloseAlert = () => {\n    this.setState({alert:false})\n  }\n\n  loadUser = (data) =>{\n    \n    var obj\n    fetch(' http://localhost:8000/todo/' + data.id)\n      .then(res => res.json())\n      .then(data => obj = data)\n      .then(() => this.setState({items:obj}))\n    this.setState({\n      user:{\n        id:data.id,\n        name:data.name,\n        email:data.email\n      },\n    })\n\n    \n  }\n\n  onRouteChange = (route) =>{\n    if (route === 'signout'){\n      this.setState({isSignedIn:false})\n    } else if (route ==='home'){\n      this.setState({isSignedIn:true})\n    }\n    this.setState({route : route})\n  }\n\n\n  addItem = (item, id) =>  {\n    if (item.todo !== \"\"){\n      fetch('http://localhost:8000/add/' + id, {\n        method:'post',\n        headers:{'Content-Type' : 'application/json'},\n        body:JSON.stringify({\n          todo:item.todo,\n          id:id\n        })\n      })\n      .then( res=> res.json().then(resp=>{\n        item.noteid= resp.noteid\n        const newItems = [...this.state.items, item]\n        this.setState({\n          items:newItems\n        }) \n      }))\n    }\n\n  }\n\n  editItem = (todo, id)=>{\n    \n    fetch('http://localhost:8000/todo/' + id, {\n        method:'PUT',\n        headers:{'Content-Type' : 'application/json', 'Authorization' : 'sdfsfsfwiiowuerewrwrewrww'},\n        body:JSON.stringify({\n          todo:todo\n        })\n      })\n      .then(res => {\n        console.log(id)\n        const editedItems = this.state.items\n        for (let i= 0; i< editedItems.length; i++){\n          if(editedItems[i].noteid == id){\n            editedItems[i].todo = todo\n          }\n        }\n        this.setState({items:editedItems})\n      })\n  }\n\n  deleteItem = (key) =>{\n    fetch('http://localhost:8000/todo/' + key, {\n      method:'delete',\n      headers:{'Content-Type' : 'application/json'},\n      body:JSON.stringify({ \n        noteid:key\n      })\n    })\n    .then(data =>{\n      const filteredItems =  this.state.items.filter(item => item.noteid!== key)\n      this.setState({items:filteredItems})\n    })\n  }\n\n  toggleComplete = (item) => {\n\n    console.log(item)\n\n    if (item.done != 0){\n      fetch('http://localhost:8000/toggle/' + item.noteid, {\n        method:'PUT',\n        headers:{'Content-Type' : 'application/json', 'Authorization' : 'sdfsfsfwiiowuerewrwrewrww'},\n        body:JSON.stringify({\n          done:0\n        })\n      })\n      .then(res => {\n        const editedItems = this.state.items\n        for (let i= 0; i< editedItems.length; i++){\n          if(editedItems[i].noteid === item.noteid){\n            editedItems[i].done = 0\n          }\n        }\n        this.setState({items:editedItems})\n      }) \n    } else {\n      fetch('http://localhost:8000/toggle/' + item.noteid, {\n        method:'PUT',\n        headers:{'Content-Type' : 'application/json', 'Authorization' : 'sdfsfsfwiiowuerewrwrewrww'},\n        body:JSON.stringify({\n          done:1\n        })\n      })\n      .then(res => {\n        const editedItems = this.state.items\n        for (let i= 0; i< editedItems.length; i++){\n          if(editedItems[i].noteid === item.noteid){\n            editedItems[i].done = 1\n          }\n        }\n        this.setState({items:editedItems})\n      }) \n    }\n\n\n\n  }\n  \n  render(){\n    return(\n      <div className=\"App\">\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n        {this.state.route==='home'\n          ? \n            <div>\n              <Logo />\n              <Particles params={particlesOption} className=\"particles\" />\n              <Note  show={this.state.show}  toggleComplete={this.toggleComplete} editItem={this.editItem} deleteItem={this.deleteItem} addItem={this.addItem} items={this.state.items} info={this.state.user} />\n            </div>\n          : (\n            this.state.route === 'signin'\n            ? \n              <div>\n                <Particles params={particlesOption} className=\"particles\" />\n                <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n                </div>\n            :\n              <div>\n                <Particles params={particlesOption} className=\"particles\" />\n                <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n              </div>\n          )\n          \n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}