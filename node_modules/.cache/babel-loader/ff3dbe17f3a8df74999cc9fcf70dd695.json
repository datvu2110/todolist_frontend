{"ast":null,"code":"var _jsxFileName = \"/Users/beetee/Downloads/Bloc/todolist/src/components/Notes/ListItem.js\";\n// import React from 'react'\n// import Particles from 'react-particles-js'\n// import './ListItem.css'\n// import Note from './Note'\n// import {Modal, Button, Row, Col, Form } from 'react-bootstrap'\n// import ModalItem from './ModalItem'\n// import FlipMove from 'react-flip-move'\n// class ListItem extends React.Component{\n//     state = {\n//         todo:{},\n//         show: false,\n//         currentNoteID: \"\",\n//         alert:false\n//     }\n//     handleModal =(id) =>{\n//         this.setState({show:true});\n//         this.setCurrentId(id);      \n//     }\n//     setCurrentId = (id) => {\n//         this.setState({currentNoteID: id});\n//     }\n//     handleClose = () => { \n//         this.setState({ show: false,alert:false });\n//         //console.log(\"show : \" +this.props.show);\n//     }\n//     showAlert =() =>{\n//         this.setState({alert:true})\n//     }\n//     // handleSubmit = (e) =>{\n//     //     e.preventDefault()\n//     //     const noteId = document.getElementById(\"currentNoteId\").innerHTML\n//     //     const todo = e.target.TodoName.value\n//     //     console.log(todo)\n//     //     fetch('http://localhost:8000/todo/' + noteId, {\n//     //     method:'PUT',\n//     //     headers:{'Content-Type' : 'application/json', 'Authorization' : 'sdfsfsfwiiowuerewrwrewrww'},\n//     //     body:JSON.stringify({\n//     //       todo:todo\n//     //     })\n//     //   }).then((result)=>console.log(result))\n//     // }\n//     render(){\n//         let i = 0;\n//         return <div>\n//             {this.props.items.map((item,index) => {\n//                 i = i+ 1\n//                 return(\n//                     <div key={index}>\n//                         <div className=\"list\" key={item.noteid} >\n//                             <p id={\"p\" + 1} style={{\n//                                 textDecoration: item.done === 1  ? 'line-through' : \"\"\n//                             }}  key={item.noteid} onClick={()=> this.props.toggleComplete(item) } > {item.todo}  </p>\n//                             <div className=\"icons\">\n//                                 <Button size=\"sm\" onClick={()=> {let id; id = item.noteid;this.handleModal(id) }} id={item.noteid} >Edit</Button>\n//                                 <ModalItem showAlert={this.showAlert} alert={this.state.alert} show = {this.state.show} itemid={this.state.currentNoteID} handleClose = {this.handleClose} editItem={this.props.editItem} />\n//                                 <img onClick={()=> this.props.deleteItem(item.noteid)} src=\"https://img.icons8.com/wired/64/000000/empty-trash.png\" height=\"20\" />\n//                             </div>\n//                         </div>\n//                     </div>\n//                 )\n//             })}\n//         </div>\n//     }\n// }\n// export default ListItem\nimport React from 'react';\nimport Particles from 'react-particles-js';\nimport './ListItem.css';\nimport Note from './Note';\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nimport ModalItem from './ModalItem';\n\nclass ListItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todo: {},\n      show: false,\n      currentNoteID: \"\"\n    };\n\n    this.handleModal = id => {\n      this.setState({\n        show: true\n      });\n      this.setCurrentId(id);\n      console.log(this.state);\n      console.log('this is:', this);\n    };\n\n    this.setCurrentId = id => {\n      this.setState({\n        currentNoteID: id\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      }); //console.log(\"show : \" +this.props.show);\n    };\n  }\n\n  // handleSubmit = (e) =>{\n  //     e.preventDefault()\n  //     const noteId = document.getElementById(\"currentNoteId\").innerHTML\n  //     const todo = e.target.TodoName.value\n  //     console.log(todo)\n  //     fetch('http://localhost:8000/todo/' + noteId, {\n  //     method:'PUT',\n  //     headers:{'Content-Type' : 'application/json', 'Authorization' : 'sdfsfsfwiiowuerewrwrewrww'},\n  //     body:JSON.stringify({\n  //       todo:todo\n  //     })\n  //   }).then((result)=>console.log(result))\n  // }\n  render() {\n    let i = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 16\n      }\n    }, this.props.items.map(item => {\n      i = i + 1;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"list\",\n        key: item.noteid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        id: \"p\" + 1,\n        style: {\n          textDecoration: item.done === 1 ? 'line-through' : \"\"\n        },\n        key: item.noteid,\n        onClick: () => this.props.toggleComplete(item),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }\n      }, \" \", item.todo, \" \", item.noteid, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          let id;\n          id = item.noteid;\n          this.handleModal(id);\n        },\n        id: item.noteid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 33\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(ModalItem, {\n        editItem: this.props.editItem,\n        show: this.state.show,\n        itemid: this.state.currentNoteID,\n        handleClose: this.handleClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        onClick: () => this.props.deleteItem(item.noteid),\n        src: \"https://img.icons8.com/wired/64/000000/empty-trash.png\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 33\n        }\n      }))));\n    }));\n  }\n\n}\n/* const ListItem = (props) =>{\n    const items = props.items\n    if (items.length !== 0){\n        const listItems = items.map(item => {\n            return (\n                <div className=\"list\" key={item.noteid}>\n                    <p key={item.noteid}> {item.todo} {item.noteid}</p>\n                    <div className=\"icons\">\n                        <img className=\"pencil\" src=\"https://img.icons8.com/android/24/000000/pencil.png\" height=\"20\"/>\n                        <img onClick={()=> props.deleteItem(item.noteid)} src=\"https://img.icons8.com/wired/64/000000/empty-trash.png\" height=\"20\" />\n                    </div>\n                </div>\n            )\n        })\n        return (\n            <div>{listItems}\n            \n            </div>\n        )\n    } else {\n        return (\n            <div></div>\n        )\n    }\n    \n} */\n\n\nexport default ListItem;","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/src/components/Notes/ListItem.js"],"names":["React","Particles","Note","Modal","Button","Row","Col","Form","ModalItem","ListItem","Component","state","todo","show","currentNoteID","handleModal","id","setState","setCurrentId","console","log","handleClose","render","i","props","items","map","item","noteid","textDecoration","done","toggleComplete","editItem","deleteItem"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,QAA6C,iBAA7C;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAElCC,KAFkC,GAE1B;AAEJC,MAAAA,IAAI,EAAC,EAFD;AAGJC,MAAAA,IAAI,EAAE,KAHF;AAIJC,MAAAA,aAAa,EAAE;AAJX,KAF0B;;AAAA,SASlCC,WATkC,GASpBC,EAAD,IAAO;AAChB,WAAKC,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAC;AAAN,OAAd;AACA,WAAKK,YAAL,CAAkBF,EAAlB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,IAAxB;AAEH,KAfiC;;AAAA,SAiBlCF,YAjBkC,GAiBlBF,EAAD,IAAQ;AACnB,WAAKC,QAAL,CAAc;AAACH,QAAAA,aAAa,EAAEE;AAAhB,OAAd;AACH,KAnBiC;;AAAA,SAoBlCK,WApBkC,GAoBpB,MAAM;AAChB,WAAKJ,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAd,EADgB,CAEhB;AACH,KAvBiC;AAAA;;AA0BlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAS,EAAAA,MAAM,GAAE;AACJ,QAAIC,CAAC,GAAG,CAAR;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IAAI;AAC1BJ,MAAAA,CAAC,GAAGA,CAAC,GAAE,CAAP;AACA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEI,IAAI,CAACC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAG,QAAA,EAAE,EAAE,MAAM,CAAb;AAAgB,QAAA,KAAK,EAAE;AACnBC,UAAAA,cAAc,EAAEF,IAAI,CAACG,IAAL,KAAc,CAAd,GAAmB,cAAnB,GAAoC;AADjC,SAAvB;AAEI,QAAA,GAAG,EAAEH,IAAI,CAACC,MAFd;AAEsB,QAAA,OAAO,EAAE,MAAK,KAAKJ,KAAL,CAAWO,cAAX,CAA0BJ,IAA1B,CAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEyEA,IAAI,CAACf,IAF9E,OAEqFe,IAAI,CAACC,MAF1F,MADJ,eAII;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAK;AAAC,cAAIZ,EAAJ;AAAQA,UAAAA,EAAE,GAAGW,IAAI,CAACC,MAAV;AAAiB,eAAKb,WAAL,CAAiBC,EAAjB;AAAsB,SAAtE;AAAwE,QAAA,EAAE,EAAEW,IAAI,CAACC,MAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAKI,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWQ,QAAhC;AAA0C,QAAA,IAAI,EAAI,KAAKrB,KAAL,CAAWE,IAA7D;AAAmE,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,aAAtF;AAAqG,QAAA,WAAW,EAAI,KAAKO,WAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,eAOI;AAAK,QAAA,OAAO,EAAE,MAAK,KAAKG,KAAL,CAAWS,UAAX,CAAsBN,IAAI,CAACC,MAA3B,CAAnB;AAAuD,QAAA,GAAG,EAAC,wDAA3D;AAAoH,QAAA,MAAM,EAAC,IAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CAJJ,CADJ,CADJ;AAmBH,KArBA,CADE,CAAP;AAyBH;;AApEiC;AAwEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAenB,QAAf","sourcesContent":["// import React from 'react'\n// import Particles from 'react-particles-js'\n// import './ListItem.css'\n// import Note from './Note'\n// import {Modal, Button, Row, Col, Form } from 'react-bootstrap'\n// import ModalItem from './ModalItem'\n// import FlipMove from 'react-flip-move'\n\n// class ListItem extends React.Component{\n\n//     state = {\n\n//         todo:{},\n//         show: false,\n//         currentNoteID: \"\",\n//         alert:false\n//     }\n\n//     handleModal =(id) =>{\n//         this.setState({show:true});\n//         this.setCurrentId(id);      \n//     }\n\n//     setCurrentId = (id) => {\n//         this.setState({currentNoteID: id});\n//     }\n//     handleClose = () => { \n//         this.setState({ show: false,alert:false });\n//         //console.log(\"show : \" +this.props.show);\n//     }\n\n//     showAlert =() =>{\n//         this.setState({alert:true})\n//     }\n//     // handleSubmit = (e) =>{\n//     //     e.preventDefault()\n//     //     const noteId = document.getElementById(\"currentNoteId\").innerHTML\n//     //     const todo = e.target.TodoName.value\n//     //     console.log(todo)\n//     //     fetch('http://localhost:8000/todo/' + noteId, {\n//     //     method:'PUT',\n//     //     headers:{'Content-Type' : 'application/json', 'Authorization' : 'sdfsfsfwiiowuerewrwrewrww'},\n//     //     body:JSON.stringify({\n//     //       todo:todo\n//     //     })\n//     //   }).then((result)=>console.log(result))\n//     // }\n\n\n//     render(){\n//         let i = 0;\n//         return <div>\n//             {this.props.items.map((item,index) => {\n//                 i = i+ 1\n//                 return(\n//                     <div key={index}>\n\n//                         <div className=\"list\" key={item.noteid} >\n//                             <p id={\"p\" + 1} style={{\n//                                 textDecoration: item.done === 1  ? 'line-through' : \"\"\n//                             }}  key={item.noteid} onClick={()=> this.props.toggleComplete(item) } > {item.todo}  </p>\n//                             <div className=\"icons\">\n                                \n                                \n//                                 <Button size=\"sm\" onClick={()=> {let id; id = item.noteid;this.handleModal(id) }} id={item.noteid} >Edit</Button>\n                                \n//                                 <ModalItem showAlert={this.showAlert} alert={this.state.alert} show = {this.state.show} itemid={this.state.currentNoteID} handleClose = {this.handleClose} editItem={this.props.editItem} />\n                                \n//                                 <img onClick={()=> this.props.deleteItem(item.noteid)} src=\"https://img.icons8.com/wired/64/000000/empty-trash.png\" height=\"20\" />\n//                             </div>\n//                         </div>\n//                     </div>\n//                 )\n//             })}\n//         </div>\n        \n//     }\n// }\n\n// export default ListItem\n\n\nimport React from 'react'\nimport Particles from 'react-particles-js'\nimport './ListItem.css'\nimport Note from './Note'\nimport {Modal, Button, Row, Col, Form } from 'react-bootstrap'\nimport ModalItem from './ModalItem'\n\nclass ListItem extends React.Component{\n\n    state = {\n\n        todo:{},\n        show: false,\n        currentNoteID: \"\"\n    }\n\n    handleModal =(id) =>{\n        this.setState({show:true});\n        this.setCurrentId(id);\n        console.log(this.state)\n        console.log('this is:', this);\n        \n    }\n\n    setCurrentId = (id) => {\n        this.setState({currentNoteID: id});\n    }\n    handleClose = () => { \n        this.setState({ show: false });\n        //console.log(\"show : \" +this.props.show);\n    }\n\n\n    // handleSubmit = (e) =>{\n    //     e.preventDefault()\n    //     const noteId = document.getElementById(\"currentNoteId\").innerHTML\n    //     const todo = e.target.TodoName.value\n    //     console.log(todo)\n    //     fetch('http://localhost:8000/todo/' + noteId, {\n    //     method:'PUT',\n    //     headers:{'Content-Type' : 'application/json', 'Authorization' : 'sdfsfsfwiiowuerewrwrewrww'},\n    //     body:JSON.stringify({\n    //       todo:todo\n    //     })\n    //   }).then((result)=>console.log(result))\n    // }\n\n\n    render(){\n        let i = 0;\n        return <div>\n            {this.props.items.map(item => {\n                i = i+ 1\n                return(\n                    <div>\n                        <div className=\"list\" key={item.noteid} >\n                            <p id={\"p\" + 1} style={{\n                                textDecoration: item.done === 1  ? 'line-through' : \"\"\n                            }}  key={item.noteid} onClick={()=> this.props.toggleComplete(item) } > {item.todo} {item.noteid} </p>\n                            <div className=\"icons\">\n                                \n                                \n                                <Button onClick={()=> {let id; id = item.noteid;this.handleModal(id) }} id={item.noteid} >Edit</Button>\n                                \n                                <ModalItem editItem={this.props.editItem} show = {this.state.show} itemid={this.state.currentNoteID} handleClose = {this.handleClose}/>\n                                \n                                <img onClick={()=> this.props.deleteItem(item.noteid)} src=\"https://img.icons8.com/wired/64/000000/empty-trash.png\" height=\"20\" />\n                            </div>\n                        </div>\n                    </div>\n                \n                )\n            })}\n        </div>\n        \n    }\n}\n\n\n/* const ListItem = (props) =>{\n    const items = props.items\n    if (items.length !== 0){\n        const listItems = items.map(item => {\n            return (\n                <div className=\"list\" key={item.noteid}>\n                    <p key={item.noteid}> {item.todo} {item.noteid}</p>\n                    <div className=\"icons\">\n                        <img className=\"pencil\" src=\"https://img.icons8.com/android/24/000000/pencil.png\" height=\"20\"/>\n                        <img onClick={()=> props.deleteItem(item.noteid)} src=\"https://img.icons8.com/wired/64/000000/empty-trash.png\" height=\"20\" />\n                    </div>\n                </div>\n            )\n        })\n        return (\n            <div>{listItems}\n            \n            </div>\n        )\n    } else {\n        return (\n            <div></div>\n        )\n    }\n    \n} */\n\nexport default ListItem"]},"metadata":{},"sourceType":"module"}