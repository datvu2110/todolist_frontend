{"ast":null,"code":"var _jsxFileName = \"/Users/beetee/Downloads/Bloc/todolist/src/components/Notes/ModalItem.js\";\n// import React from 'react'\n// import {Modal, Button, Row, Col, Form, Alert } from 'react-bootstrap'\n// class ModalItem extends React.Component{\n//     handleSubmit = (e) => {\n//         let noteId = \"\"\n//         noteId = document.getElementById(\"currentNoteId\").innerHTML\n//         const todo = e.target.TodoName.value\n//         e.preventDefault()\n//         this.props.editItem(todo, noteId)\n//         this.props.showAlert()\n//     }\n//     render(){\n//         return(\n//             <Modal show={this.props.show} onHide={this.props.handleClose} >\n//                                     <Modal.Header closeButton>Edit Todo</Modal.Header>\n//                                     <Modal.Body>\n//                                         <Row>\n//                                             <Col sm={6}>\n//                                                 <Form onSubmit={this.handleSubmit}>\n//                                                 <Form.Group controlId=\"TodoName\" >\n//                                                     <Form.Label>Re-enter Todo</Form.Label>\n//                                                     <Form.Control type=\"text\" name=\"TodoName\" required placeholder=\"TodoName\" />\n//                                                 </Form.Group>\n//                                                 <Form.Group>\n//                                                     <Button variant=\"primary\" type=\"submit\">Rename</Button>\n//                                                 </Form.Group>\n//                                                 </Form>\n//                                                 <p hidden id=\"currentNoteId\">{this.props.itemid}</p>\n//                                                 <Alert show={this.props.alert} className=\"text-center\" variant=\"success\">\n//                                                     Todo is updated\n//                                                 </Alert>\n//                                             </Col>\n//                                         </Row>\n//                                     </Modal.Body>\n//                                     <Modal.Footer>\n//                                         <Button onClick ={ this.props.handleClose }>Close</Button>\n//                                     </Modal.Footer>\n//             </Modal>\n//         )\n//     }\n// }\n// export default ModalItem\nimport React from 'react';\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\n\nclass ModalItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      let noteId = \"\";\n      noteId = document.getElementById(\"currentNoteId\").innerHTML;\n      const todo = e.target.TodoName.value;\n      e.preventDefault();\n      this.props.editItem(todo, noteId);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      onHide: this.props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }\n    }, \"Edit Todo\"), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"TodoName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 53\n      }\n    }, \"Re-enter Todo\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"TodoName\",\n      required: true,\n      placeholder: \"TodoName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 53\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 53\n      }\n    }, \"Rename\"))), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"currentNoteId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 53\n      }\n    }, this.props.itemid)))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 41\n      }\n    }, \"Close\")));\n  }\n\n}\n\nexport default ModalItem;","map":{"version":3,"sources":["/Users/beetee/Downloads/Bloc/todolist/src/components/Notes/ModalItem.js"],"names":["React","Modal","Button","Row","Col","Form","ModalItem","Component","constructor","props","handleSubmit","e","noteId","document","getElementById","innerHTML","todo","target","TodoName","value","preventDefault","editItem","render","show","handleClose","itemid"],"mappings":"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","sourcesContent":["// import React from 'react'\n// import {Modal, Button, Row, Col, Form, Alert } from 'react-bootstrap'\n\n// class ModalItem extends React.Component{\n    \n\n\n//     handleSubmit = (e) => {\n//         let noteId = \"\"\n//         noteId = document.getElementById(\"currentNoteId\").innerHTML\n//         const todo = e.target.TodoName.value\n//         e.preventDefault()\n//         this.props.editItem(todo, noteId)\n//         this.props.showAlert()\n//     }\n//     render(){\n        \n//         return(\n//             <Modal show={this.props.show} onHide={this.props.handleClose} >\n//                                     <Modal.Header closeButton>Edit Todo</Modal.Header>\n//                                     <Modal.Body>\n//                                         <Row>\n//                                             <Col sm={6}>\n//                                                 <Form onSubmit={this.handleSubmit}>\n//                                                 <Form.Group controlId=\"TodoName\" >\n//                                                     <Form.Label>Re-enter Todo</Form.Label>\n//                                                     <Form.Control type=\"text\" name=\"TodoName\" required placeholder=\"TodoName\" />\n//                                                 </Form.Group>\n//                                                 <Form.Group>\n//                                                     <Button variant=\"primary\" type=\"submit\">Rename</Button>\n//                                                 </Form.Group>\n//                                                 </Form>\n//                                                 <p hidden id=\"currentNoteId\">{this.props.itemid}</p>\n//                                                 <Alert show={this.props.alert} className=\"text-center\" variant=\"success\">\n//                                                     Todo is updated\n//                                                 </Alert>\n//                                             </Col>\n//                                         </Row>\n//                                     </Modal.Body>\n//                                     <Modal.Footer>\n//                                         <Button onClick ={ this.props.handleClose }>Close</Button>\n//                                     </Modal.Footer>\n//             </Modal>\n//         )\n//     }\n// }\n\n// export default ModalItem\n\nimport React from 'react'\nimport {Modal, Button, Row, Col, Form } from 'react-bootstrap'\n\nclass ModalItem extends React.Component{\n    constructor(props) {\n        super(props);\n    }\n\n    handleSubmit = (e) => {\n        let noteId = \"\"\n        noteId = document.getElementById(\"currentNoteId\").innerHTML\n        const todo = e.target.TodoName.value\n        e.preventDefault()\n        this.props.editItem(todo, noteId)\n    }\n    render(){\n        \n        return(\n            <Modal show={this.props.show} onHide={this.props.handleClose} >\n                                    <Modal.Header closeButton>Edit Todo</Modal.Header>\n                                    <Modal.Body>\n                                        <Row>\n                                            <Col sm={6}>\n                                                <Form onSubmit={this.handleSubmit}>\n                                                <Form.Group controlId=\"TodoName\" >\n                                                    <Form.Label>Re-enter Todo</Form.Label>\n                                                    <Form.Control type=\"text\" name=\"TodoName\" required placeholder=\"TodoName\" />\n                                                </Form.Group>\n                                                <Form.Group>\n                                                    <Button variant=\"primary\" type=\"submit\">Rename</Button>\n                                                </Form.Group>\n                                                </Form>\n                                                    <p  id=\"currentNoteId\">{this.props.itemid}</p>\n                                            </Col>\n                                        </Row>\n                                    </Modal.Body>\n                                    <Modal.Footer>\n                                        <Button onClick ={ this.props.handleClose }>Close</Button>\n                                    </Modal.Footer>\n            </Modal>\n        )\n    }\n}\n\nexport default ModalItem"]},"metadata":{},"sourceType":"module"}